<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>Faucet Networking</name>
  <version>1.8</version>
  <packageID></packageID>
  <ProductID></ProductID>
  <date>11.08.2019</date>
  <license>ISC license</license>
  <description>Provides basic networking functionality</description>
  <helpfile></helpfile>
  <installdir></installdir>
  <classname></classname>
  <androidclassname></androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <maccompilerflags></maccompilerflags>
  <androidinject></androidinject>
  <androidmanifestinject></androidmanifestinject>
  <iosplistinject></iosplistinject>
  <androidactivityinject></androidactivityinject>
  <gradleinject></gradleinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <ConfigOptions>
    <Config name="Default">
      <CopyToMask>9223372036854775807</CopyToMask>
    </Config>
  </ConfigOptions>
  <androidPermissions/>
  <IncludedResources/>
  <files>
    <file>
      <filename>faucetNetworking.dll</filename>
      <origname>D:\Eigene Dateien\Programmierung\CB_Faucet\Faucet Networking\bin\Release\Faucet Networking.dll</origname>
      <init>dllStartup</init>
      <final>dllShutdown</final>
      <kind>1</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>dllShutdown</name>
          <externalName>dllShutdown</externalName>
          <kind>12</kind>
          <help></help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>dllStartup</name>
          <externalName>dllStartup</externalName>
          <kind>12</kind>
          <help></help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>fct_append_file_to_buffer</name>
          <externalName>append_file_to_buffer</externalName>
          <kind>12</kind>
          <help>fct_append_file_to_buffer(dest, filename)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>fct_bit_get</name>
          <externalName>bit_get</externalName>
          <kind>12</kind>
          <help>fct_bit_get(value,bitnum)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_bit_set</name>
          <externalName>bit_set</externalName>
          <kind>12</kind>
          <help>fct_bit_set(value,bitnum,bitval)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_buffer_bytes_left</name>
          <externalName>buffer_bytes_left</externalName>
          <kind>12</kind>
          <help>fct_buffer_bytes_left(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_buffer_clear</name>
          <externalName>buffer_clear</externalName>
          <kind>12</kind>
          <help>fct_buffer_clear(buffer)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_buffer_create</name>
          <externalName>buffer_create</externalName>
          <kind>12</kind>
          <help>fct_buffer_create()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>fct_buffer_destroy</name>
          <externalName>buffer_destroy</externalName>
          <kind>12</kind>
          <help>fct_buffer_destroy(buffer)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_buffer_set_readpos</name>
          <externalName>buffer_set_readpos</externalName>
          <kind>12</kind>
          <help>fct_buffer_set_readpos(source, pos)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_buffer_size</name>
          <externalName>buffer_size</externalName>
          <kind>12</kind>
          <help>fct_buffer_size(buffer)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_build_ubyte</name>
          <externalName>build_ubyte</externalName>
          <kind>12</kind>
          <help>fct_build_ubyte(bit7,bit6,bit5,bit4,bit3,bit2,bit1,bit0)</help>
          <returnType>2</returnType>
          <argCount>8</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_debug_handles</name>
          <externalName>debug_handles</externalName>
          <kind>12</kind>
          <help>fct_debug_handles()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>fct_ipv4_lookup_create</name>
          <externalName>ipv4_lookup_create</externalName>
          <kind>12</kind>
          <help>fct_ipv4_lookup_create(hostname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>fct_ipv6_lookup_create</name>
          <externalName>ipv6_lookup_create</externalName>
          <kind>12</kind>
          <help>fct_ipv6_lookup_create(hostname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>fct_ip_is_v4</name>
          <externalName>ip_is_v4</externalName>
          <kind>12</kind>
          <help>fct_ip_is_v4(string)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>fct_ip_is_v6</name>
          <externalName>ip_is_v6</externalName>
          <kind>12</kind>
          <help>fct_ip_is_v6(string)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>fct_ip_lookup_create</name>
          <externalName>ip_lookup_create</externalName>
          <kind>12</kind>
          <help>fct_ip_lookup_create(hostname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>fct_ip_lookup_destroy</name>
          <externalName>ip_lookup_destroy</externalName>
          <kind>12</kind>
          <help>fct_ip_lookup_destroy(lookup)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_ip_lookup_has_next</name>
          <externalName>ip_lookup_has_next</externalName>
          <kind>12</kind>
          <help>fct_ip_lookup_has_next(lookup)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_ip_lookup_next_result</name>
          <externalName>ip_lookup_next_result</externalName>
          <kind>12</kind>
          <help>fct_ip_lookup_next_result(lookup)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_ip_lookup_ready</name>
          <externalName>ip_lookup_ready</externalName>
          <kind>12</kind>
          <help>fct_ip_lookup_ready(lookup)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_mac_addrs</name>
          <externalName>mac_addrs</externalName>
          <kind>12</kind>
          <help>fct_mac_addrs()</help>
          <returnType>1</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>fct_read_base64</name>
          <externalName>read_base64</externalName>
          <kind>12</kind>
          <help>fct_read_base64(source, len)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_read_byte</name>
          <externalName>read_byte</externalName>
          <kind>12</kind>
          <help>fct_read_byte(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_read_double</name>
          <externalName>read_double</externalName>
          <kind>12</kind>
          <help>fct_read_double(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_read_float</name>
          <externalName>read_float</externalName>
          <kind>12</kind>
          <help>fct_read_float(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_read_hex</name>
          <externalName>read_hex</externalName>
          <kind>12</kind>
          <help>fct_read_hex(source, len)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_read_int</name>
          <externalName>read_int</externalName>
          <kind>12</kind>
          <help>fct_read_int(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_read_short</name>
          <externalName>read_short</externalName>
          <kind>12</kind>
          <help>fct_read_short(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_read_string</name>
          <externalName>read_string</externalName>
          <kind>12</kind>
          <help>fct_read_string(source, length)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_read_ubyte</name>
          <externalName>read_ubyte</externalName>
          <kind>12</kind>
          <help>fct_read_ubyte(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_read_uint</name>
          <externalName>read_uint</externalName>
          <kind>12</kind>
          <help>fct_read_uint(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_read_ushort</name>
          <externalName>read_ushort</externalName>
          <kind>12</kind>
          <help>fct_read_ushort(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_set_little_endian</name>
          <externalName>set_little_endian</externalName>
          <kind>12</kind>
          <help>fct_set_little_endian(buffer|socket, bool)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_set_little_endian_global</name>
          <externalName>set_little_endian_global</externalName>
          <kind>12</kind>
          <help>fct_set_little_endian_global(bool)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_socket_accept</name>
          <externalName>socket_accept</externalName>
          <kind>12</kind>
          <help>fct_socket_accept(acceptor)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_socket_connecting</name>
          <externalName>socket_connecting</externalName>
          <kind>12</kind>
          <help>fct_socket_connecting(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_socket_destroy</name>
          <externalName>socket_destroy</externalName>
          <kind>12</kind>
          <help>fct_socket_destroy(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_socket_destroy_abortive</name>
          <externalName>socket_destroy_abortive</externalName>
          <kind>12</kind>
          <help>fct_socket_destroy_abortive(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_socket_error</name>
          <externalName>socket_error</externalName>
          <kind>12</kind>
          <help>fct_socket_error(socket)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_socket_handle_io</name>
          <externalName>socket_handle_io</externalName>
          <kind>12</kind>
          <help>fct_socket_handle_io()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>fct_socket_has_error</name>
          <externalName>socket_has_error</externalName>
          <kind>12</kind>
          <help>fct_socket_has_error(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_socket_local_port</name>
          <externalName>socket_local_port</externalName>
          <kind>12</kind>
          <help>fct_socket_local_port(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_socket_receivebuffer_size</name>
          <externalName>socket_receivebuffer_size</externalName>
          <kind>12</kind>
          <help>fct_socket_receivebuffer_size(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_socket_remote_ip</name>
          <externalName>socket_remote_ip</externalName>
          <kind>12</kind>
          <help>fct_socket_remote_ip(socket)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_socket_remote_port</name>
          <externalName>socket_remote_port</externalName>
          <kind>12</kind>
          <help>fct_socket_remote_port(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_socket_send</name>
          <externalName>socket_send</externalName>
          <kind>12</kind>
          <help>fct_socket_send(tcpSocket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_socket_sendbuffer_limit</name>
          <externalName>socket_sendbuffer_limit</externalName>
          <kind>12</kind>
          <help>fct_socket_sendbuffer_limit(socket, limit)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_socket_sendbuffer_size</name>
          <externalName>socket_sendbuffer_size</externalName>
          <kind>12</kind>
          <help>fct_socket_sendbuffer_size(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_tcp_connect</name>
          <externalName>tcp_connect</externalName>
          <kind>12</kind>
          <help>fct_tcp_connect(host, port)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_tcp_eof</name>
          <externalName>tcp_eof</externalName>
          <kind>12</kind>
          <help>fct_tcp_eof(tcpSocket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_tcp_listen</name>
          <externalName>tcp_listen</externalName>
          <kind>12</kind>
          <help>fct_tcp_listen(port)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_tcp_listening_v4</name>
          <externalName>tcp_listening_v4</externalName>
          <kind>12</kind>
          <help>fct_tcp_listening_v4(acceptor)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_tcp_listening_v6</name>
          <externalName>tcp_listening_v6</externalName>
          <kind>12</kind>
          <help>fct_tcp_listening_v6(acceptor)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_tcp_receive</name>
          <externalName>tcp_receive</externalName>
          <kind>12</kind>
          <help>fct_tcp_receive(tcpSocket, numBytes)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_tcp_receive_available</name>
          <externalName>tcp_receive_available</externalName>
          <kind>12</kind>
          <help>fct_tcp_receive_available(tcpSocket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_tcp_set_nodelay</name>
          <externalName>tcp_set_nodelay</externalName>
          <kind>12</kind>
          <help>fct_tcp_set_nodelay(tcpSocket, noDelay)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_udp_bind</name>
          <externalName>udp_bind</externalName>
          <kind>12</kind>
          <help>fct_udp_bind(port)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_udp_broadcast</name>
          <externalName>udp_broadcast</externalName>
          <kind>12</kind>
          <help>fct_udp_broadcast(udpSocket|buffer, port)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_udp_receive</name>
          <externalName>udp_receive</externalName>
          <kind>12</kind>
          <help>fct_udp_receive(udpSocket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_udp_send</name>
          <externalName>udp_send</externalName>
          <kind>12</kind>
          <help>fct_udp_send(udpSocket|buffer, host, port)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_write_base64</name>
          <externalName>write_base64</externalName>
          <kind>12</kind>
          <help>fct_write_base64(dest, base64)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>fct_write_buffer</name>
          <externalName>write_buffer</externalName>
          <kind>12</kind>
          <help>fct_write_buffer(dest, source)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_write_buffer_part</name>
          <externalName>write_buffer_part</externalName>
          <kind>12</kind>
          <help>fct_write_buffer_part(dest, source, bytes)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_write_buffer_to_file</name>
          <externalName>write_buffer_to_file</externalName>
          <kind>12</kind>
          <help>fct_write_buffer_to_file(source, filename)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>fct_write_byte</name>
          <externalName>write_byte</externalName>
          <kind>12</kind>
          <help>fct_write_byte(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_write_double</name>
          <externalName>write_double</externalName>
          <kind>12</kind>
          <help>fct_write_double(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_write_float</name>
          <externalName>write_float</externalName>
          <kind>12</kind>
          <help>fct_write_float(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_write_hex</name>
          <externalName>write_hex</externalName>
          <kind>12</kind>
          <help>fct_write_hex(dest, hexString)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>fct_write_int</name>
          <externalName>write_int</externalName>
          <kind>12</kind>
          <help>fct_write_int(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_write_short</name>
          <externalName>write_short</externalName>
          <kind>12</kind>
          <help>fct_write_short(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_write_string</name>
          <externalName>write_string</externalName>
          <kind>12</kind>
          <help>fct_write_string(dest, string)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>fct_write_ubyte</name>
          <externalName>write_ubyte</externalName>
          <kind>12</kind>
          <help>fct_write_ubyte(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_write_uint</name>
          <externalName>write_uint</externalName>
          <kind>12</kind>
          <help>fct_write_uint(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_write_ushort</name>
          <externalName>write_ushort</externalName>
          <kind>12</kind>
          <help>fct_write_ushort(dest, value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>_fnet_hidden_bytes_before_delimiter</name>
          <externalName>_fnet_hidden_bytes_before_delimiter</externalName>
          <kind>12</kind>
          <help>_fnet_hidden_bytes_before_delimiter(source, needle)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>_fnet_hidden_read_binary_string</name>
          <externalName>_fnet_hidden_read_binary_string</externalName>
          <kind>12</kind>
          <help>_fnet_hidden_read_binary_string(source, outstr)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>_fnet_hidden_read_cstring</name>
          <externalName>_fnet_hidden_read_cstring</externalName>
          <kind>12</kind>
          <help>_fnet_hidden_read_cstring(source)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>_fnet_hidden_read_delimited_string</name>
          <externalName>_fnet_hidden_read_delimited_string</externalName>
          <kind>12</kind>
          <help>_fnet_hidden_read_delimited_string(source, delimiter)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>_fnet_hidden_skip_length_of_string</name>
          <externalName>_fnet_hidden_skip_length_of_string</externalName>
          <kind>12</kind>
          <help>_fnet_hidden_skip_length_of_string(source, skip)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>_fnet_hidden_write_binary_string</name>
          <externalName>_fnet_hidden_write_binary_string</externalName>
          <kind>12</kind>
          <help>_fnet_hidden_write_binary_string(dest,string)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>fct_faucetnet_gmscripts.gml</filename>
      <origname>D:\Eigene Dateien\Programmierung\CB_Faucet\Faucet Networking\fct_faucetnet_gmscripts.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>fct_read_binary_string</name>
          <externalName>read_binary_string</externalName>
          <kind>2</kind>
          <help>fct_read_binary_string(source, length)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_read_cstring</name>
          <externalName>read_cstring</externalName>
          <kind>2</kind>
          <help>fct_read_cstring(source)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_read_delimited_binary_string</name>
          <externalName>read_delimited_binary_string</externalName>
          <kind>2</kind>
          <help>fct_read_delimited_binary_string</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_read_delimited_string</name>
          <externalName>read_delimited_string</externalName>
          <kind>2</kind>
          <help>fct_read_delimited_string(buf, delim)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fct_write_binary_string</name>
          <externalName>write_binary_string</externalName>
          <kind>2</kind>
          <help>fct_write_binary_string(dest, string)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
  </files>
</extension>
