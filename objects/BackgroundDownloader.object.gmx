<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hash = "";
title = "";
url = "";
showVersion = true;

tmpfile = temp_directory + "\background.png.tmp";

handle = http_new_get(BACKGROUND_SOURCE);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Finished/Errored
if (http_step(handle)) {
    // Request failed
    if (http_status_code(handle) != 200)
    {
        // Just give up
        http_destroy(handle);
        instance_destroy();
        exit;
    }

    fct_write_buffer_to_file(http_response_body(handle), tmpfile);
    http_destroy(handle);

    // File doesn't exist
    if (!file_exists(tmpfile))
    {
        instance_destroy();
        exit;
    }

    // Integrity check fails, download failed (presumably)
    if (hash != GG2DLL_compute_MD5(tmpfile))
    {
        instance_destroy();
        exit;
    }
    
    // Delete existing background
    if (file_exists("background.png"))
    {
        file_delete("background.png");
    }

    // Move tempfile
    file_copy(tmpfile, "background.png");
    file_delete(tmpfile);

    // Update Globals &amp; INI
    global.backgroundHash = hash;
    global.backgroundTitle = title;
    global.backgroundURL = url;
    global.backgroundShowVersion = showVersion;
    ini_open("gg2.ini");
    ini_write_string("Background", "BackgroundHash", global.backgroundHash);
    ini_write_string("Background", "BackgroundTitle", global.backgroundTitle);
    ini_write_string("Background", "BackgroundURL", global.backgroundURL);
    ini_write_string("Background", "BackgroundShowVersion", global.backgroundShowVersion);
    ini_close();

    // Make main menu controller reload
    with (MainMenuController)
    {
        event_user(1);
    }

    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
