<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>DevMessagesCheckerS</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>handleCreated = false;
instance_destroy();

// We only want to check for messages once per run
if(variable_global_exists("devMessagesChecked")) {
    if(global.devMessagesChecked) {
        instance_destroy();
        exit;
    }
}

// downloads a text file off the internet, and parses it for instructions
// from the developers
// If any are found, they will be shown/executed/whatever

var url;
if(global.updaterBetaChannel)
    url = DEVMESSAGES_SOURCE_BETA;
else
    url = DEVMESSAGES_SOURCE;

handle = http_new_get(url);
handleCreated = true;

image_speed = 5/room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(handleCreated)
    http_destroy(handle);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 5/room_speed;

if (http_step(handle)) {
    // Request failed
    if (http_status_code(handle) != 200) {
        // Just give up
        instance_destroy();
        exit;
    }

    var data;
    data = http_response_body(handle);
    data = fct_read_string(data, fct_buffer_size(data));

    global.devMessagesChecked = true;

    // split into lines by LF
    data = split(data, chr(10));
    
    var c;
    for(c = 0; c &lt; ds_list_size(data); c += 2)
    {
        switch(ds_list_find_value(data, c))
        {
        case "ShowMessage":
            var popup;
            popup = instance_create(250, 471, DevMessagePopup);
            popup.msg = ds_list_find_value(data, c + 1);
            break;
        case "Version":
            versioncheck = ds_list_find_value(data, c + 1);
            versionend = string_pos("!",versioncheck);
            version = string_copy(versioncheck,1,versionend-1);
            changeslength = string_length(versioncheck)-versionend;
            changes=string_copy(versioncheck,versionend+1,changeslength);
            if(real(version) &gt; VERSION)
            {
                var popup;
                popup = instance_create(250, 471, DevMessagePopup);
                popup.msg = "Updates have been made to Gang Garrison 2!##"+changes;
                popup.updating = true;
            }
            break;
        case "Background":
            var text, list, hash, title, url, showVersion;
            text = ds_list_find_value(data, c + 1);
            list = ds_list_create();

            // split string by |
            while (string_pos("|", text) != 0)
            {
                ds_list_add(list, string_copy(text,0,string_pos("|",text)-1));
                text = string_copy(text,string_pos("|",text)+1,string_length(text)-string_pos("|",text));
            }
            ds_list_add(list, text);

            hash = ds_list_find_value(list, 0);
            title = ds_list_find_value(list, 1);
            url = ds_list_find_value(list, 2);
            showVersion = (ds_list_find_value(list, 3) == "true");

            ds_list_destroy(list);

            // current background should be default
            if (hash == "default")
            {
                if (global.backgroundHash != "default")
                {
                    // reset to default background
                    global.backgroundHash = "default";
                    global.backgroundTitle = "";
                    global.backgroundURL = "";
                    global.backgroundShowVersion = true;
                    ini_open("gg2.ini");
                    ini_write_string("Background", "BackgroundHash", global.backgroundHash);
                    ini_write_string("Background", "BackgroundTitle", global.backgroundTitle);
                    ini_write_string("Background", "BackgroundURL", global.backgroundURL);
                    ini_write_real("Background", "BackgroundShowVersion", global.backgroundShowVersion);
                    ini_close();
    
                    // Delete downloaded background if existant
                    if (file_exists("background.png"))
                    {
                        file_delete("background.png");
                    }
    
                    // fade in
                    with (MainMenuController)
                    {
                        event_user(1);
                    }
                }
            }
            // current background different from downloaded
            else if (hash != global.backgroundHash)
            {
                // download
                var downloader;
                downloader = instance_create(0, 0, BackgroundDownloader);
                downloader.hash = hash;
                downloader.title = title;
                downloader.url = url;
                downloader.showVersion = showVersion;
            }
            // current background same as downloaded, updated title/URL/show version flag
            else if (title != global.backgroundTitle
                || url != global.backgroundURL
                || showVersion != global.backgroundShowVersion)
            {
                global.backgroundTitle = title;
                global.backgroundURL = url;
                global.backgroundShowVersion = showVersion;
                ini_open("gg2.ini");
                ini_write_string("Background", "BackgroundTitle", global.backgroundTitle);
                ini_write_string("Background", "BackgroundURL", global.backgroundURL);
                ini_write_real("Background", "BackgroundShowVersion", global.backgroundShowVersion);
                ini_close();
            }
            break;
        }
    }

    ds_list_destroy(data);
    
    instance_destroy();
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
