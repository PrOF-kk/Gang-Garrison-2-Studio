<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>TeamDeathmatchHUDS</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-120000</depth>
  <persistent>0</persistent>
  <parentName>HUD</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timeLimit=global.timeLimitMins*30*60;
timer=timeLimit;
killLimit = global.killLimit;
overtime = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((timer &gt; 0) and global.run_virtual_ticks)
    timer -= 1;
if ((global.redCaps &gt;= killLimit) or (global.blueCaps &gt;= killLimit) or timer&lt;=0) {
    if (global.redCaps &gt; global.blueCaps)
        global.winners = TEAM_RED;
    else if (global.blueCaps &gt; global.redCaps)
        global.winners = TEAM_BLUE;
    else
        global.winners = TEAM_SPECTATOR;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>receiveCompleteMessage(global.serverSocket,7,global.deserializeBuffer);
global.timeLimitMins = fct_read_ubyte(global.deserializeBuffer);
timeLimit=global.timeLimitMins*30*60;
timer=fct_read_uint(global.deserializeBuffer);
killLimit = fct_read_ushort(global.deserializeBuffer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fct_write_ubyte(global.serializeBuffer, global.timeLimitMins);
fct_write_uint(global.serializeBuffer, timer);
fct_write_ushort(global.serializeBuffer, killLimit);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xoffset, yoffset, xsize, ysize, xshift, yshift;
xoffset = view_xview[0];
yoffset = view_yview[0];
xsize = view_wview[0];
ysize = view_hview[0];
xshift = -320 * global.timerPos;
yshift = 5 * global.timerPos;

var width, height, xpos, ypos;
width = sprite_get_width(sprite_index) * 3;
height = sprite_get_height(sprite_index) * 3;
xpos = xoffset + xsize / 2 - width / 2;
ypos = yoffset + ysize;

draw_set_alpha(1);
   
draw_sprite_ext(sprite_index, 0, xpos, ypos, 3, 3, 0, c_white, 1);

draw_set_color(c_black);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);

// Red kills
draw_text_transformed(xpos + width / 2 - width / 3.5, ypos - height / 2 + 6, string(global.redCaps), 2, 2, 0);

// Blue kills
draw_text_transformed(xpos + width / 2 + width / 3.5, ypos - height / 2 + 6, string(global.blueCaps), 2, 2, 0);

// Kill limit
draw_text_transformed(xpos + width / 2, ypos - 14, string(killLimit), 2, 2, 0);

//timer
if instance_exists(WinBanner) exit;
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_center);

draw_roundtimer(xoffset, yoffset, xsize, ysize, timer);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
