<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>workQueue = ds_queue_create();

// Socket is 0 =&gt; not currently waiting for an answer
socket = 0;
currentPlayer = noone;
responseBuffer = fct_buffer_create;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>while(!ds_queue_empty(workQueue))
{
    var item;
    item = ds_queue_dequeue(workQueue);
    fct_buffer_destroy(ds_list_find_value(item, 1));
    ds_list_destroy(item);
}
ds_queue_destroy(workQueue);
fct_socket_destroy(socket);
fct_buffer_destroy(responseBuffer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!socket)
{
    if(ds_queue_empty(workQueue))
    {
        // Out of work, let's make like a tree before more arrives
        instance_destroy();
        exit;
    }
    
    // pop (and clean up) the next work item
    var item, authbuffer;
    item = ds_queue_dequeue(workQueue);
    currentPlayer = ds_list_find_value(item, 0);
    authbuffer = ds_list_find_value(item, 1);
    ds_list_destroy(item);
    
    // start the next auth check
    socket = fct_tcp_connect(AUTH_SERVER_HOST, AUTH_SERVER_PORT);
    fct_write_buffer(socket, authbuffer);
    fct_buffer_destroy(authbuffer);
    fct_socket_send(socket);
}
else if(!fct_tcp_eof(socket))
{
    fct_tcp_receive_available(socket);
    fct_write_buffer(responseBuffer, socket);
}
else
{
    if(!fct_socket_has_error(socket) and instance_exists(currentPlayer) and fct_buffer_size(responseBuffer)&gt;0)
    {
        var rewards;
        rewards = fct_read_string(responseBuffer, fct_buffer_size(responseBuffer));
        rewardAuthSuccess(currentPlayer, rewards);
    }
    
    fct_socket_destroy(socket);
    socket = 0;
    currentPlayer = noone;
    fct_buffer_clear(responseBuffer);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
