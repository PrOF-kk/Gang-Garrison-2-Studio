<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>afktimeout = 60*30;
afktimer = afktimeout;
oldScoreKeyDown = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.myself.object == -1) exit;
    
//AFK Check -- double length for server host
if(global.isHost)
    afktimer -= 0.5 * global.delta_factor
else
    afktimer -= 1 * global.delta_factor;

if ((afktimer &lt;= 0) and !global.myself.object.afk)
{
    global.myself.object.afk = true;
    if !instance_exists(TeamSelectController)
        instance_create(0,0,TeamSelectController);
    with(TeamSelectController)
        afk = true;
}
   
if(global.myself.class == CLASS_ENGINEER)
{
    if(global.myself.sentry and !instance_exists(SentryHealthHud))
        instance_create(0,0,SentryHealthHud);

    if(!instance_exists(NutsNBoltsHud))
        instance_create(0,0,NutsNBoltsHud);
}
if(global.myself.class == CLASS_HEAVY)
{
    if(!instance_exists(SandwichHud))
        instance_create(0,0,SandwichHud);
}

// Sticky HUD. Because real men let computers count for them.
else if (global.myself.class == CLASS_DEMOMAN) &amp;&amp; !instance_exists(StickyCounter) instance_create(0,0,StickyCounter);
  
else if global.myself.class == CLASS_MEDIC {
    //Uber HUD
    if !instance_exists(UberHud) instance_create(0,0,UberHud);
    //Healing Hud
    if !instance_exists(HealingHud) &amp;&amp; global.showHealing = 1 instance_create(0,0,HealingHud);
    //Medic Radar
    if global.medicRadar == 1 &amp;&amp; !instance_exists(MedicRadar) instance_create(0,0,MedicRadar);
}
        
// Health HUD
if  !instance_exists(HealthHud) instance_create(0,0,HealthHud);

// Healed HUD
if !instance_exists(HealedHud) &amp;&amp; global.showHealer = 1 instance_create(0,0,HealedHud);
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(MenuController))
    exit;
    
var kickOpen;
kickOpen = false
if (instance_exists(ScoreTableController))
    if (ScoreTableController.showadmin)
        kickOpen = true;
    
if(instance_exists(TeamSelectController) || instance_exists(ClassSelectController) || kickOpen)
    menuOpen = true;
else
    menuOpen = false;

//Checking for input - Mapped Keys
if(keyboard_check_pressed(global.changeTeam))
    inputChangeTeam();
if(keyboard_check_pressed(global.changeClass))
    inputChangeClass();

event_user(8);
    
var keybyte;
keybyte = 0;

/* KeyByte flags:
    02 - down
    
    08 - primary
    10 - secondary
    
    20 - right
    40 - left
    80 - up
*/

//character object exists
if(global.myself.object != -1)
{
    if(!menuOpen)
    {
        if(keyboard_check(global.left) || keyboard_check(global.left2)) keybyte |= $40;
        if(keyboard_check(global.right) || keyboard_check(global.right2)) keybyte |= $20;
        if(keyboard_check(global.jump) || keyboard_check(global.jump2)) keybyte |= $80;
        if(keyboard_check(global.down) || keyboard_check(global.down2)) keybyte |= $02;
        if(keyboard_check(global.taunt)) keybyte |= $01;
        if(keyboard_check_pressed(global.chat1)) inputChat1();
        if(keyboard_check_pressed(global.chat2)) inputChat2();
        if(keyboard_check_pressed(global.chat3)) inputChat3();
        if(keyboard_check_pressed(global.drop)) inputDrop();
        
        if(keyboard_check_pressed(global.medic))
        {
            inputCallMedic();
        }
        
        if(!global.myself.humiliated)
        {
            if(keyboard_check(global.attack)) keybyte |= $10;
            if(keyboard_check(global.special)) keybyte |= $08;
            if(keyboard_check_pressed(global.special)) inputSpecial();
            if(keyboard_check_pressed(global.taunt)) inputTaunt();
            
            if(mouse_check_button(mb_left))
            {
                if(global.attack == MOUSE_LEFT) keybyte |= $10;
                if(global.special == MOUSE_LEFT) keybyte |= $08;
            }
            if(mouse_check_button_pressed(mb_left) and global.special == MOUSE_LEFT)
                inputSpecial();

            if(mouse_check_button(mb_right))
            {
                if(global.attack == MOUSE_RIGHT) keybyte |= $10;
                if(global.special == MOUSE_RIGHT) keybyte |= $08;
            }
            if(mouse_check_button_pressed(mb_right) and global.special == MOUSE_RIGHT)
                inputSpecial();
            
        }
    }
    
    if(global.run_virtual_ticks)
        ClientInputstate(global.serverSocket, keybyte);
    fct_socket_send(global.serverSocket);
}
// spectator controls
else if (instance_exists(Spectator))
{
    if(!menuOpen)
    {
        if(mouse_check_button_pressed(mb_left))
            with (Spectator) event_user(7);
        if(mouse_check_button_pressed(mb_right))
            with (Spectator) event_user(8);
    }
}

if(keybyte != 0
        or keyboard_check(global.left) or keyboard_check(global.left2)
        or keyboard_check(global.right) or keyboard_check(global.right2)
        or keyboard_check(global.jump) or keyboard_check(global.jump2)
        or keyboard_check(global.down) or keyboard_check(global.down2)) {
    afktimer = afktimeout;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var scoreKeyDown;
scoreKeyDown = keyboard_check_direct(global.showScores);
if(scoreKeyDown and !oldScoreKeyDown)
    inputShowScores();
else if(!scoreKeyDown and oldScoreKeyDown)
    inputCloseScores();
oldScoreKeyDown = scoreKeyDown;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(MenuController))
    instance_create(x,y,InGameMenuController);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
